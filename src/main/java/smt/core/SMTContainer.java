package smt.core;

import com.google.common.collect.Lists;
import com.google.common.eventbus.EventBus;
import com.google.common.eventbus.Subscribe;
import cpw.mods.fml.common.*;
import cpw.mods.fml.common.event.FMLPostInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;
import org.apache.logging.log4j.Logger;
import smt.core.network.NetworkManager;
import smt.core.plugin.SMTCorePlugin;
import smt.core.sound.SoundHelper;

import java.io.File;
import java.util.List;

/**
 * Primary container, contains useful
 * core content, provided to sub-modules
 * @author Dragon2488
 */
public class SMTContainer extends DummyModContainer {

	public static SMTContainer instance;

	/**
	 * Primary logger, similar to SMTCorePlugin logger
	 * @see smt.core.plugin.SMTCorePlugin
	 */
	public static Logger log;

	/**
	 * Primary network manager, used to
	 * send and receive all mod packets
	 */
	public static NetworkManager network;

	/**
	 * Simple wrapper around minecraft sound manager
	 * Used for easy sounds registration and playing, stopping
	 */
	@SideOnly(Side.CLIENT)
	public static SoundHelper soundManager;

	public SMTContainer() {
		super(new ModMetadata());
		ModMetadata meta = getMetadata();
		meta.modId = "SMT|CORE";
		meta.name = "SMT: Core";
		meta.version = "0.11a";
		meta.url = "http://forum.mcmodding.ru/viewtopic.php?id=4";
		meta.authorList = Lists.newArrayList("timaxa007", "Dragon2488");
		meta.description = "SMT: Core provides ability to run other SMT modules, such as: " +
				"SMT: Decorations, SMT: Technology, SMT: Magic, SMT: Cookery, SMT: Durability and SMT: Environment";
		meta.logoFile = "/smt_core_logo.png";
		meta.autogenerated = false;
		log = SMTCorePlugin.log;
		instance = this;
	}

	@Subscribe
	public void preInit(FMLPreInitializationEvent event) {
		network = new NetworkManager(getModId());
	}

	@Subscribe
	public void postInit(FMLPostInitializationEvent event) {
		if(FMLCommonHandler.instance().getSide().isClient())
			soundManager = new SoundHelper();
	}

	/**
	 * We should receive events, so we need to
	 * register yourself and return true
	 */
	@Override
	public boolean registerBus(EventBus bus, LoadController controller) {
		bus.register(this);
		return true;
	}

	@Override
	public File getSource() {
		return SMTCorePlugin.coremodLocation;
	}

	@Override
	public Object getMod() {
		return this;
	}


	@Override
	public boolean matches(Object mod) {
		return getMod() == mod;
	}

	@Override
	public Disableable canBeDisabled() {
		return Disableable.NEVER;
	}

	@Override
	public List<String> getOwnedPackages() {
		return Lists.newArrayList("timaxa007.tms.core");
	}
}
